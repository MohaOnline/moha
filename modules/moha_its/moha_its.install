<?php
/**
 * @file
 */

/**
 * Prepares entities table.
 */
function moha_its_schema() {
  // @see https://www.drupal.org/docs/7/api/schema-api/updating-tables-hook_update_n-functions.
  $schema['moha_its_group'] = array(
    'description' => 'Stores group company information.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary Key: Unique Group ID.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'pid' => array(
        'description' => 'ID of parent Group / Company.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'name' => array(
        'description' => 'Name of group.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'full_name' => array(
        'description' => 'Full name of group.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'local_name' => array(
        'description' => 'Local name of group.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'vid' => array(
        'description' => 'Revision ID of group.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'rid' => array(
        'description' => 'User ID who represents the group.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'User ID who made the creation or update.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Group status.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the account was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the account was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'description' => array(
        'type' => 'text', // Can't have default value.
        'size' => 'big',
        'description' => 'Descriptions of group / company.',
        'not null' => FALSE,
      ),
      'comment' => array(
        'type' => 'text', // Can't have default value.
        'size' => 'big',
        'description' => 'Update reason.',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );

  // Entity revision is handled by field API mostly.
  $schema['moha_its_group_revision'] = array(
    'description' => 'Stores revisions of group company information.',
    'fields' => array(
      'vid' => array(
        'description' => 'Primary Key: Unique Group Revision ID.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'pid' => array(
        'description' => 'ID of parent Group / Company.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'name' => array(
        'description' => 'Name of group.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'full_name' => array(
        'description' => 'Full name of group.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'local_name' => array(
        'description' => 'Local name of group.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'id' => array(
        'description' => 'Parent ID - Group ID.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'rid' => array(
        'description' => 'User ID who represents the group.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'User ID who made the creation or update.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'The status of this record.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the account was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the account was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'description' => array(
        'type' => 'text', // Can't have default value.
        'size' => 'big',
        'description' => 'Descriptions of group / company.',
        'not null' => FALSE,
      ),
      'comment' => array(
        'type' => 'text', // Can't have default value.
        'size' => 'big',
        'description' => 'Update reason.',
        'not null' => FALSE,
      )
    ),
    'primary key' => array('vid'),
  );

  // Entity storing table: Moha ITS Infrastructure.
  $schema[__MOHA_ITS_INFRASTRUCTURE] = array(
    'description' => 'Stores infrastructure information of IT platform.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary Key: Unique ID.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'vid' => array(
        'description' => 'Revision ID.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'name' => array(
        'description' => 'Infrastructure internal name (machine name).',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'full_name' => array(
        'description' => 'Infrastructure full name (human name).',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'tid' => array(
        'description' => 'Term ID of infrastructure type.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'oid' => array(
        'description' => 'Owner ID who or which entity owns the infrastructure.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'User ID who made the creation or update.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Entity status.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the account was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the account was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'comment' => array(
        'type' => 'text', // Can't have default value.
        'size' => 'big',
        'description' => 'Update reason.',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );

  // Entity revision is handled by field API mostly.
  $schema[__MOHA_ITS_INFRASTRUCTURE . '_revision'] = array(
    'description' => 'Stores revisions information for Moha ITS Infrastructure entity.',
    'fields' => array(
      'vid' => array(
        'description' => 'Primary Key: Unique Revision ID.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'id' => array(
        'description' => 'Parent ID - Group ID.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'name' => array(
        'description' => 'Infrastructure internal name (machine name).',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'full_name' => array(
        'description' => 'Infrastructure full name (human name).',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'tid' => array(
        'description' => 'Term ID of infrastructure type.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'oid' => array(
        'description' => 'Owner ID who or which entity owns the infrastructure.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'User ID who made the creation or update.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Entity status.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the account was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the account was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'comment' => array(
        'type' => 'text', // Can't have default value.
        'size' => 'big',
        'description' => 'Update reason.',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('vid'),
  );

  // Entity storing table: Moha ITS Service.
  $schema[__MOHA_ITS_SERVICE] = array(
    'description' => 'Stores service information of IT assets.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary Key: Unique ID.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'vid' => array(
        'description' => 'Revision ID.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'gid' => array(
        'description' => 'Group / Company ID which this service belong to.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'sid' => array(
        'description' => 'Solution ID Which current service is belong to.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'name' => array(
        'description' => 'Service internal name (machine name).',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'full_name' => array(
        'description' => 'Service full name (human name).',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'tid' => array(
        'description' => 'Term ID of Service type.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'bid' => array(
        'description' => 'Moha ITS Business ID.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'oid' => array(
        'description' => 'User ID who owns the service.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'User ID who made the creation or update.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Service status.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the account was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the account was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'comment' => array(
        'type' => 'text', // Can't have default value.
        'size' => 'big',
        'description' => 'Update reason.',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );

  // Entity revision is handled by field API mostly.
  $schema[__MOHA_ITS_SERVICE . '_revision'] = array(
    'description' => 'Stores revisions information for Moha ITS Service entity.',
    'fields' => array(
      'vid' => array(
        'description' => 'Primary Key: Unique Revision ID.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'id' => array(
        'description' => 'Parent ID - Group ID.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'gid' => array(
        'description' => 'Group / Company ID which this service belong to.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'sid' => array(
        'description' => 'Solution ID Which current service is belong to.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'name' => array(
        'description' => 'Service internal name (machine name).',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'full_name' => array(
        'description' => 'Service full name (human name).',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'tid' => array(
        'description' => 'Term ID of Service type.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'bid' => array(
        'description' => 'Moha ITS Business ID.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'oid' => array(
        'description' => 'User ID who represents the group.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'User ID who made the creation or update.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Entity status.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the account was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the account was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'comment' => array(
        'type' => 'text', // Can't have default value.
        'size' => 'big',
        'description' => 'Update reason.',
        'not null' => FALSE,
      )
    ),
    'primary key' => array('vid'),
  );

  // Operation.
  $schema[__MOHA_ITS_EFFORT] = array(
    'description' => 'Stores Effort information.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary Key: Unique ID.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'vid' => array(
        'description' => 'Revision ID.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'gid' => array(
        'description' => 'Group / Company ID which this operation belong to.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'sid' => array(
        'description' => 'Service ID Which current operation is belong to.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'title' => array(
        'description' => 'Title: 2019-03-18 03:30 | admin(1) | 0.5.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'tid' => array(
        'description' => 'Term ID of Effort type.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'bid' => array(
        'description' => 'Moha ITS Business ID.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'rid' => array(
        'description' => 'Moha ITS Request ID.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'oid' => array(
        'description' => 'User ID who spent the effort.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'date' => array(
        'description' => 'Date time of the effort',
        'type' => 'datetime',
        'mysql_type' => 'DATETIME',
        'pgsql_type' => 'timestamp without time zone',
        'sqlite_type' => 'VARCHAR',
        'sqlsrv_type' => 'smalldatetime',
        'not null' => FALSE,
        'sortable' => TRUE,
        'default' => NULL,
      ),
      'duration' => array(
        'description' => 'Duration time of effort, unit is hour.',
        'type' => 'float',
      ),
      'uid' => array(
        'description' => 'User ID who made the creation or update.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the record was updated.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the record was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'comment' => array(
        'type' => 'text', // Can't have default value.
        'size' => 'big',
        'description' => 'Update reason.',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );

  // Entity revision is handled by field API mostly.
  $schema[__MOHA_ITS_EFFORT . '_revision'] = array(
    'description' => 'Stores revisions of operation information.',
    'fields' => array(
      'vid' => array(
        'description' => 'Primary Key: Unique Revision ID.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'id' => array(
        'description' => 'Parent ID.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'gid' => array(
        'description' => 'Group / Company ID which this operation belong to.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'sid' => array(
        'description' => 'Service ID Which current operation is belong to.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'title' => array(
        'description' => 'Title: 2019-03-18 03:30 | admin(1) | 0.5.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'tid' => array(
        'description' => 'Term ID of Effort type.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'bid' => array(
        'description' => 'Moha ITS Business ID.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'rid' => array(
        'description' => 'Moha ITS Request ID.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'oid' => array(
        'description' => 'User ID who spent the effort.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'date' => array(
        'description' => 'Date time of the effort',
        'type' => 'datetime',
        'mysql_type' => 'DATETIME',
        'pgsql_type' => 'timestamp without time zone',
        'sqlite_type' => 'VARCHAR',
        'sqlsrv_type' => 'smalldatetime',
        'not null' => FALSE,
        'sortable' => TRUE,
        'default' => NULL,
      ),
      'duration' => array(
        'description' => 'Duration time of effort, unit is hour.',
        'type' => 'float',
      ),
      'uid' => array(
        'description' => 'User ID who made the creation or update.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the record was updated.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the record was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'comment' => array(
        'type' => 'text', // Can't have default value.
        'size' => 'big',
        'description' => 'Update reason.',
        'not null' => FALSE,
      )
    ),
    'primary key' => array('vid'),
  );

  /**
   * @link https://www.drupal.org/docs/7/api/schema-api/data-types @endlink
   */
  $schema[__MOHA_ITS_AZURE_CHINA_EXPENSE] = array(
    'description' => 'Stores expense data from Azure China',
    'fields' => array(
      'id' => array(
        'description' => 'Primary Key: Unique ID.',
        'type' => 'serial',
        'size' => 'big', // tiny / small / medium / normal / big
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'vid' => array(
        'description' => 'Revision ID.',
        'type' => 'int',
        'size' => 'big', // tiny / small / medium / normal / big
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'enrollment_id' => array(
        'description' => 'Azure issued contract no to identify different companies.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
      ),
      'AccountOwnerId' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'AccountName' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'ServiceAdministratorId' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'SubscriptionId' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'SubscriptionGuid' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'SubscriptionName' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'Date' => array(
        'description' => 'Date time of the expense occurred',
        'type' => 'datetime',
        'mysql_type' => 'DATETIME',
        'pgsql_type' => 'timestamp without time zone',
        'sqlite_type' => 'VARCHAR',
        'sqlsrv_type' => 'smalldatetime',
        'not null' => FALSE,
        'sortable' => TRUE,
        'default' => NULL,
      ),
      'Month' => array(
        'type' => 'int',
        'size' => 'small', // tiny / small / medium / normal / big
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'Day' => array(
        'type' => 'int',
        'size' => 'small', // tiny / small / medium / normal / big
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'Year' => array(
        'type' => 'int',
        'size' => 'small', // tiny / small / medium / normal / big
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'Product' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'MeterId' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'MeterCategory' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'MeterSubCategory' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'MeterRegion' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'MeterName' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'ConsumedQuantity' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'ResourceRate' => array(
        'type' => 'numeric',
        'precision' => 48,        /* Total digits. */
        'scale' => 30,            /* Total digits following the decimal point. */
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'ExtendedCost' => array(
        'type' => 'numeric',
        'precision' => 48,        /* Total digits. */
        'scale' => 30,            /* Total digits following the decimal point. */
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'ResourceLocation' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'ConsumedService' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'InstanceId' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'ServiceInfo1' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'ServiceInfo2' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'AdditionalInfo' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'Tags' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'StoreServiceIdentifier' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'DepartmentName' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'CostCenter' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'UnitOfMeasure' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'ResourceGroup' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'status' => array(
        'description' => 'Entity status.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the record was updated.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the record was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'date' => array('Date'),
      'year' => array('Year'),
      'month' => array('Month'),
      'day' => array('Day'),
      'year_month' => array('Year', 'Month'),
      'year_month_day' => array('Year', 'Month', 'Day'),
      'enrollment_id' => array(array('enrollment_id', 64)),
      'enrollment_id_year_month' => array(array('enrollment_id', 64), 'Year', 'Month'),
      'AccountName' => array(array('AccountName', 256)),
      'SubscriptionName' => array(array('InstanceId', 256)),
      'ResourceLocation' => array(array('ResourceLocation', 256)),
      'InstanceId' => array(array('InstanceId', 256)),
      'ResourceGroup' => array(array('ResourceGroup', 256)),
      'status' => array('status'),
    ),
    'primary key' => array('id'),
  );
  $schema[__MOHA_ITS_AZURE_CHINA_EXPENSE] = moha_entity_db_schema_default_index($schema[__MOHA_ITS_AZURE_CHINA_EXPENSE]);
  $schema[__MOHA_ITS_AZURE_CHINA_EXPENSE . '_revision'] = moha_entity_db_revision_schema($schema[__MOHA_ITS_AZURE_CHINA_EXPENSE]);

  return $schema;
}

/**
 * @inheritdoc
 *
 * @throws fieldException
 */
function moha_its_install() {
  $taxonomies = _moha_its_taxonomies();
  moha_create_taxonomies($taxonomies);

  /** @see moha_its_fields_and_instances() */
  moha_create_fields_and_instances('moha_its_fields_and_instances');
}

/**
 * Defines and returns Moha ITS taxonomy data.
 */
function _moha_its_taxonomies() {
  $t = get_t();

  $taxonomies = array(
    array(
      'name' => $t('Moha ITS Infrastructure Types'),
      'description' => $t('Specifies which type of platform current infrastructure belong to.'),
      'machine_name' => MOHA_ITS__VOCABULARY__INFRASTRUCTURE_TYPES,
      'terms' => array(
        MOHA_ITS__TERM__AZURE_CHINA,
        MOHA_ITS__TERM__AWS_CHINA,
        MOHA_ITS__TERM__ALIYUN,
        MOHA_ITS__TERM__ON_PREMISES,
      ),
    ),
    array(
      'name' => $t('Moha ITS Service Types'),
      'description' => $t('Specifies service type.'),
      'machine_name' => MOHA_ITS__VOCABULARY__SERVICE_TYPES,
      'terms' => array(
        'Virtual Machine',
        'VPN',
        'Redis',
        'MySQL',
        'Application',
      ),
    ),
    //
    array(
      'name' => $t('Moha ITS Effort Types'),
      'description' => $t('Defines Moha ITS Effort Types.'),
      'machine_name' => MOHA_ITS__VOCABULARY__EFFORT_TYPES,
      'terms' => array(
        MOHA__TERM__BACKUP,
        MOHA__TERM__CHECKING,
        MOHA__TERM__CONFIGURATION,
        MOHA__TERM__COMMUNICATION,
        MOHA__TERM__DEVELOPMENT,
        MOHA__TERM__UPLOADING,
      ),
    ),
  );

  return $taxonomies;
}

/**
 * Create tables for moha its entities.
 * @throws \FieldException
 */
function moha_its_update_0701() {
  $schemas = moha_its_schema();

  foreach ($schemas as $schema_name => $schema_array) {
    if (!db_table_exists($schema_name)) {
      db_create_table($schema_name, $schema_array);
    }
  }

  /** @see moha_its_fields_and_instances() */
  moha_create_fields_and_instances('moha_its_fields_and_instances');
}


