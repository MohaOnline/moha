<?php
/**
 * @file
 */

/**
 * Prepares entities table.
 */
function moha_its_schema() {
  // @see https://www.drupal.org/docs/7/api/schema-api/updating-tables-hook_update_n-functions.
  $schema['moha_its_group'] = array(
    'description' => 'Stores group company information.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary Key: Unique Group ID.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'pid' => array(
        'description' => 'ID of parent Group / Company.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'name' => array(
        'description' => 'Name of group.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'full_name' => array(
        'description' => 'Full name of group.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'local_name' => array(
        'description' => 'Local name of group.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'vid' => array(
        'description' => 'Revision ID of group.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'rid' => array(
        'description' => 'User ID who represents the group.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'User ID who made the creation or update.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Group status.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the account was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the account was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'comment' => array(
        'type' => 'text', // Can't have default value.
        'size' => 'big',
        'description' => 'Update reason.',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );

  // Entity revision is handled by field API mostly.
  $schema['moha_its_group_revision'] = array(
    'description' => 'Stores revisions of group company information.',
    'fields' => array(
      'vid' => array(
        'description' => 'Primary Key: Unique Group Revision ID.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'pid' => array(
        'description' => 'ID of parent Group / Company.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'name' => array(
        'description' => 'Name of group.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'full_name' => array(
        'description' => 'Full name of group.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'local_name' => array(
        'description' => 'Local name of group.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
        'default' => '',
      ),
      'id' => array(
        'description' => 'Parent ID - Group ID.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'rid' => array(
        'description' => 'User ID who represents the group.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'User ID who made the creation or update.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'The status of this record.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the account was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the account was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'comment' => array(
        'type' => 'text', // Can't have default value.
        'size' => 'big',
        'description' => 'Update reason.',
        'not null' => FALSE,
      )
    ),
    'primary key' => array('vid'),
  );

  return $schema;
}

/**
 * @inheritdoc
 */
function moha_its_install() {
  _moha_its_taxonomy_prepare();
}


/**
 * Prepares taxonomy for Moha ITS Infrastructure.
 */
function _moha_its_taxonomy_prepare() {

  $t = get_t();

  // If not exists, create Moha ITS Infrastructure Types Taxonomy.
  $vocabulary = taxonomy_vocabulary_machine_name_load('moha_its_infrastructure_types');

  if (empty($vocabulary)) {

    // Create a vocabulary named "Moha ITS Infrastructure Types".
    $vocabulary = (object) array(
      'name' => $t('Moha ITS Infrastructure Types'),
      'description' => $t('Specifies which type of platform current platform belong to.'),
      'machine_name' => 'moha_its_infrastructure_types',
    );

    taxonomy_vocabulary_save($vocabulary);
  }

  $infra_types = array(
    'Azure China',
    'AWS China',
    'Aliyun',
  );

  foreach ($infra_types as $infra_type) {
    $terms = taxonomy_get_term_by_name($infra_type, $vocabulary->machine_name);

    if (empty($terms)){
      $term = new stdClass();

      $term->vid = $vocabulary->vid;
      $term->name = $infra_type;

      taxonomy_term_save($term);
    }
  }
}

