<?php
/**
 * @file
 *
 * The install file of the module.
 */

/**
 * Implements hook_schema().
 */
function moha_wx_schema() {
  /**
   * @see moha_wx_entity_info()
   *   Related entity definition.
   *
   * @link https://www.drupal.org/docs/7/api/schema-api/data-types @endlink
   */
  $schema[__MOHA_WX_ACCOUNT] = moha_entity_db_schema_init('Stores WeChat account information.');
  $_schema = &$schema[__MOHA_WX_ACCOUNT];
  $_schema['fields']['uid'] = moha_db_column_define('int', 'User ID who made the creation or update.');
  $_schema['fields']['type'] = moha_db_column_define('int', 'Account type.'); /** @see MOHA_WX__TYPE */
  $_schema['fields']['agent_id'] = moha_db_column_define('varchar', 'Agent ID of the enterprise account.', 64);
  $_schema['fields']['app_id'] = moha_db_column_define('varchar');
  $_schema['fields']['app_secret'] = moha_db_column_define('varchar');
  $_schema['fields']['token'] = moha_db_column_define('varchar', 'Verifying factor of WeChat message signature.');
  $_schema['fields']['scope'] = moha_db_column_define('varchar', 'OAuth2 login type.', 32);
  $_schema['fields']['encoding_aes_key'] = moha_db_column_define('varchar');
  $_schema['fields']['access_token'] = moha_db_column_define('varchar', '', 512);
  $_schema['fields']['access_token_updated'] = moha_db_column_define('int');
  $_schema['fields']['access_token_expires_in'] = moha_db_column_define('int');
  $_schema['fields']['news_title'] = moha_db_column_define('varchar');
  $_schema['fields']['news_cover'] = moha_db_column_define('varchar');
  $_schema['fields']['news_digest'] = moha_db_column_define('varchar', 'News Summary');
  $_schema['fields']['news_link'] = moha_db_column_define('varchar');
  $_schema['fields']['text'] = moha_db_column_define('text', '');
  $_schema['fields']['wx_menu'] = moha_db_column_define('text', 'WeChat menu JSON configurations.');
  $_schema['fields']['wx_fallback'] = moha_db_column_define('int', 'The account ID which to fallback when user login Open Platform through WeChat browser, vice versa.');
  $_schema['fields']['jsapi_ticket'] = moha_db_column_define('varchar', 'WeChat JS SDK invoke token.', 512);
  $_schema['fields']['jsapi_ticket_updated'] = moha_db_column_define('int', 'jsapi_ticket updated time.');
  $_schema['fields']['jsapi_ticket_expires_in'] = moha_db_column_define('int', 'How long seconds jsapi_ticket will be valid after jsapi_ticket_updated');

  moha_entity_db_add_revision_schema($schema, __MOHA_WX_ACCOUNT);
  moha_entity_db_add_cache_schema($schema, __MOHA_WX_ACCOUNT);

  return $schema;
}

/**
 * Implements hook_install().
 *
 * @throws \FieldException
 *   Throw any exception to interrupt install, otherwise module will be installed normally with inconsistent configurations.
 */
function moha_wx_install() {
  moha_wx_update_0700();
  moha_wx_update_0701();
  moha_wx_update_0702();
  moha_wx_update_0703();
  moha_wx_update_0705();
  moha_wx_update_0706();
}

/**
 * Move account information into Table moha_wx_accounts.
 */
function moha_wx_update_0700 () {
  // @see https://www.drupal.org/docs/7/api/schema-api/updating-tables-hook_update_n-functions.
  $schema['moha_wx_accounts'] = array(
    'description' => 'Stores WeChat account information.',
    'fields' => array(
      'aid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique Account ID.',
      ),
      'uid' => array(
        'description' => 'User ID who sent message.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the account was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the account was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'account_name' => array(
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
        'description' => 'Human name',
      ),
      'wechat_name' => array(
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
        'description' => 'Internal machine name of WeChat account in Moha modules.',
      ),
      'app_id' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'description' => '',
      ),
      'app_secret' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'description' => '',
      ),
      'token' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'description' => '',
      ),
      'encoding_aes_key' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'description' => '',
      ),
      'access_token' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'description' => '',
      ),
      'access_token_updated' => array(
        'description' => 'The Unix timestamp when the access token was refreshed.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('aid'),
    'indexes' => array(
      'moha_wx_accounts__account_name' => array(array('account_name', 32)),
      'moha_wx_accounts__wechat_name' => array(array('wechat_name', 32)),
    ),
  );

  db_create_table('moha_wx_accounts', $schema['moha_wx_accounts']);
}

/**
 * Update moha_wx_accounts table: update token length to 512; add access token expire field.
 */
function moha_wx_update_0701 () {
  // @see https://api.drupal.org/api/drupal/includes%21database%21database.inc/function/db_change_field/7.x
  $access_token = array(
    'type' => 'varchar',
    'length' => 512,
    'not null' => TRUE,
    'description' => '',
  );
  db_change_field('moha_wx_accounts', 'access_token', 'access_token', $access_token);

  // @see https://www.drupal.org/docs/7/api/schema-api/updating-tables-hook_update_n-functions.
  $access_token_expires_in = array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'description' => 'How long seconds access token will be valid after access_token_updated',
  );
  db_add_field('moha_wx_accounts', 'access_token_expires_in', $access_token_expires_in);

  cache_clear_all();
}

/**
 * Update moha_wx_accounts table: add welcome message related fields.
 */
function moha_wx_update_0702 () {
  // @see https://api.drupal.org/api/drupal/includes%21database%21database.inc/function/db_change_field/7.x
  $fields = array (
    array(
      'name' => 'news_title',
      'type' => 'varchar',
      'length' => 256,
      'not null' => TRUE,
      'default' => '',
      'description' => '',
    ),
    array(
      'name' => 'news_cover',
      'type' => 'varchar',
      'length' => 256,
      'not null' => TRUE,
      'default' => '',
      'description' => '',
    ),
    array(
      'name' => 'news_digest',
      'type' => 'varchar',
      'length' => 256,
      'not null' => TRUE,
      'default' => '',
      'description' => '',
    ),
    array(
      'name' => 'news_link',
      'type' => 'varchar',
      'length' => 256,
      'not null' => TRUE,
      'default' => '',
      'description' => '',
    ),
    array(
      'name' => 'text',
      'type' => 'varchar',
      'length' => 2000,
      'not null' => TRUE,
      'default' => '',
      'description' => '',
    ),
  );

  foreach ($fields as $field) {
    db_add_field('moha_wx_accounts', $field['name'], $field);
  }

  cache_clear_all();
}

/**
 * Add WeChat menu JSON storage column.
 */
function moha_wx_update_0703(){

  // @see https://www.drupal.org/docs/7/api/schema-api/updating-tables-hook_update_n-functions.
  $wx_menu = array(
    'type' => 'text',
    'not null' => FALSE,
    'description' => 'WeChat menu JSON configurations',
  );
  db_add_field('moha_wx_accounts', 'wx_menu', $wx_menu);

  cache_clear_all();
}

/**
 * Update moha_wx_accounts table: add jsapi_ticket, jsapi_ticket_updated add jsapi_ticket_expires_in field.
 */
function moha_wx_update_0705 () {
  // @see https://api.drupal.org/api/drupal/includes%21database%21database.inc/function/db_change_field/7.x
  // @see https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421141115
  $jsapi_ticket = array(
    'type' => 'varchar',
    'length' => 512,
    'not null' => TRUE,
    'default' => '',
    'description' => 'WeChat JS SDK invoke token.',
  );
  db_add_field('moha_wx_accounts', 'jsapi_ticket', $jsapi_ticket);

  // @see https://www.drupal.org/docs/7/api/schema-api/updating-tables-hook_update_n-functions.
  $jsapi_ticket_updated = array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'description' => 'jsapi_ticket updated time.',
  );
  db_add_field('moha_wx_accounts', 'jsapi_ticket_updated', $jsapi_ticket_updated);

  $jsapi_ticket_expires_in = array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'description' => 'How long seconds jsapi_ticket will be valid after jsapi_ticket_updated',
  );
  db_add_field('moha_wx_accounts', 'jsapi_ticket_expires_in', $jsapi_ticket_expires_in);

  cache_clear_all();
}

/**
 * Update moha_wx_accounts table, add account type and enterprise account attributes: is_enterprise, agent_id.
 * Added field moha_wx_userid for profile2.
 *
 * @throws \FieldException
 *   Throw any exception to interrupt update, otherwise DB version will be correctly updated.
 */
function moha_wx_update_0706 () {
  $is_enterprise = array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'description' => 'If current account is an enterprise account.',
  );
  db_add_field('moha_wx_accounts', 'is_enterprise', $is_enterprise);

  $agent_id = array(
    'type' => 'varchar',
    'length' => 32,
    'not null' => TRUE,
    'default' => '',
    'description' => 'Agent ID of application for an enterprise account.',
  );
  db_add_field('moha_wx_accounts', 'agent_id', $agent_id);

  try {
    moha_create_fields_and_instances('_moha_wx_moha_profile2_fields_and_instances');
  }
  catch (FieldException $e){
    watchdog_exception(__FUNCTION__, $e);
    throw $e;
  }

  cache_clear_all();
}
